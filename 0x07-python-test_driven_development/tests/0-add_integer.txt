The ``0-add_integer`` module
======================


Using ``0-add_integer``
-------------------
First import
``add_integer`` from the ``0-add_integer`` module:

>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

>>> add_integer(1, 2)
3

>>> add_integer(4, -2)
2

>>> add_integer(3)
101

>>> add_integer(2.1, 1)
3

""" Error """

>>> add_integer(1, 5, 6)
Traceback (most recent call last):
  File "./0-main.py", line 2, in <module>
    add_integer = __import__('0-add_integer').add_integer
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 25, in <module>
    add_integer(1, 5, 6)
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(None)
Traceback (most recent call last):
  File "./0-main.py", line 2, in <module>
    add_integer = __import__('0-add_integer').add_integer
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 25, in <module>
    add_integer(None)
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 17, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(1, "Ciao")
Traceback (most recent call last):
  File "./0-main.py", line 2, in <module>
    add_integer = __import__('0-add_integer').add_integer
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 25, in <module>
    (add_integer(1, "Ciao"))
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 19, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> (add_integer("Hola"))
Traceback (most recent call last):
  File "./0-main.py", line 2, in <module>
    add_integer = __import__('0-add_integer').add_integer
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 25, in <module>
    (add_integer("Hola"))
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 17, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(5, 1.7976931348623157e+309)
Traceback (most recent call last):
  File "./0-main.py", line 2, in <module>
    add_integer = __import__('0-add_integer').add_integer
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 24, in <module>
    add_integer(5, 1.7976931348623157e+309)
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 22, in add_integer
    b = int(b)
OverflowError: cannot convert float infinity to integer

>>> add_integer(float("NaN"), 5)
Traceback (most recent call last):
  File "./0-main.py", line 2, in <module>
    add_integer = __import__('0-add_integer').add_integer
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 24, in <module>
    add_integer(float("NaN"), 5)
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 20, in add_integer
    a = int(a)
ValueError: cannot convert float NaN to integer
